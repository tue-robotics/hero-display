name: Deployment

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-alpha'

jobs:
  deployment:
    name: Deployment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ github.ref }}
          regex: 'refs\/tags\/v[0-9]+.[0-9]+.[0-9]+-alpha'

      - name: Install
        run: npm ci
      - name: Build
        run: npm run electron:build
      - name: Test
        uses: GabrielBB/xvfb-action@v1.4
        with:
          run: --server-args="-screen 0, 1024x600x24" npm test

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: ${{ steps.regex-match.outputs.match != '' }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: dist_electron/hero-display.AppImage
          asset_name: hero-display.AppImage
          asset_content_type: application/octet-stream
